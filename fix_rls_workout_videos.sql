-- ========================================
-- FIX: REABILITAR RLS PARA WORKOUT_VIDEOS
-- ========================================
-- Data: 07/08/2025 12:30
-- Problema: RLS desabilitado permite acesso livre a todos os v√≠deos
-- Solu√ß√£o: Reabilitar RLS com pol√≠ticas adequadas

-- =============================================
-- 1. VERIFICAR STATUS ATUAL
-- =============================================

-- 1.1 Verificar se RLS est√° habilitado
SELECT 
  '=== STATUS ATUAL DO RLS ===' as check_name,
  schemaname,
  tablename,
  rowsecurity as rls_habilitado,
  CASE 
    WHEN rowsecurity = true THEN '‚úÖ RLS HABILITADO'
    WHEN rowsecurity = false THEN '‚ùå RLS DESABILITADO (PROBLEMA!)'
    ELSE '‚ö†Ô∏è STATUS DESCONHECIDO'
  END as status
FROM pg_tables 
WHERE tablename = 'workout_videos';

-- 1.2 Verificar pol√≠ticas existentes
SELECT 
  '=== POL√çTICAS ATIVAS ===' as check_name,
  policyname,
  permissive,
  cmd,
  qual
FROM pg_policies 
WHERE tablename = 'workout_videos';

-- =============================================
-- 2. LIMPAR POL√çTICAS CONFLITANTES
-- =============================================

-- 2.1 Remover todas as pol√≠ticas existentes
DROP POLICY IF EXISTS "Auto: Apenas experts veem v√≠deos" ON workout_videos;
DROP POLICY IF EXISTS "SUPER_STRICT: S√≥ experts veem v√≠deos" ON workout_videos;
DROP POLICY IF EXISTS "RLS_STRICT: Apenas experts autenticados" ON workout_videos;
DROP POLICY IF EXISTS "Apenas experts podem ver v√≠deos" ON workout_videos;
DROP POLICY IF EXISTS "Controle de acesso aos v√≠deos dos parceiros" ON workout_videos;
DROP POLICY IF EXISTS "Usu√°rios n√£o autenticados veem apenas v√≠deos p√∫blicos" ON workout_videos;
DROP POLICY IF EXISTS "V√≠deos s√£o p√∫blicos" ON workout_videos;
DROP POLICY IF EXISTS "V√≠deos b√°sicos s√£o p√∫blicos" ON workout_videos;
DROP POLICY IF EXISTS "workout_videos_select_policy" ON workout_videos;

-- =============================================
-- 3. CONFIGURAR RLS CORRETAMENTE
-- =============================================

-- 3.1 Reabilitar RLS
ALTER TABLE workout_videos ENABLE ROW LEVEL SECURITY;

-- 3.2 Criar pol√≠tica baseada na funcionalidade atual
-- ESTRAT√âGIA: Deixar usu√°rios basic verem a LISTA de v√≠deos,
-- mas o ExpertVideoGuard bloqueia o ACESSO aos links
CREATE POLICY "Permitir visualiza√ß√£o da lista para todos os usu√°rios autenticados" 
ON workout_videos FOR SELECT 
USING (
  -- Qualquer usu√°rio autenticado pode ver a lista de v√≠deos
  auth.uid() IS NOT NULL
);

-- 3.3 ALTERNATIVA: Se quiser bloquear completamente v√≠deos expert na base
-- (descomente apenas se quiser implementar bloqueio no banco tamb√©m)
/*
CREATE POLICY "Controle rigoroso baseado em account_type" 
ON workout_videos FOR SELECT 
USING (
  -- V√≠deos que n√£o requerem expert: todos autenticados podem ver
  (requires_expert_access = false OR requires_expert_access IS NULL)
  OR
  -- V√≠deos expert: s√≥ usu√°rios com account_type = 'expert' podem ver
  (
    requires_expert_access = true 
    AND EXISTS (
      SELECT 1 
      FROM profiles p
      WHERE p.id = auth.uid() 
        AND p.account_type = 'expert'
    )
  )
);
*/

-- =============================================
-- 4. VERIFICA√á√ÉO FINAL
-- =============================================

-- 4.1 Verificar se RLS foi reabilitado
SELECT 
  '=== STATUS FINAL DO RLS ===' as check_name,
  schemaname,
  tablename,
  rowsecurity as rls_habilitado,
  CASE 
    WHEN rowsecurity = true THEN '‚úÖ RLS HABILITADO CORRETAMENTE'
    WHEN rowsecurity = false THEN '‚ùå AINDA DESABILITADO!'
    ELSE '‚ö†Ô∏è STATUS DESCONHECIDO'
  END as status_final
FROM pg_tables 
WHERE tablename = 'workout_videos';

-- 4.2 Verificar pol√≠ticas criadas
SELECT 
  '=== POL√çTICAS CRIADAS ===' as check_name,
  policyname,
  permissive,
  cmd,
  CASE 
    WHEN policyname IS NOT NULL THEN '‚úÖ POL√çTICA ATIVA'
    ELSE '‚ùå NENHUMA POL√çTICA'
  END as status
FROM pg_policies 
WHERE tablename = 'workout_videos';

-- 4.3 Estat√≠sticas de v√≠deos
SELECT 
  '=== ESTAT√çSTICAS DE V√çDEOS ===' as check_name,
  COUNT(*) as total_videos,
  COUNT(CASE WHEN requires_expert_access = true THEN 1 END) as videos_expert,
  COUNT(CASE WHEN requires_expert_access = false OR requires_expert_access IS NULL THEN 1 END) as videos_basic,
  ROUND(
    100.0 * COUNT(CASE WHEN requires_expert_access = true THEN 1 END) / COUNT(*), 
    1
  ) as percentage_expert
FROM workout_videos;

-- =============================================
-- 5. RESULTADO ESPERADO
-- =============================================

/*
‚úÖ AP√ìS EXECU√á√ÉO DESTE SCRIPT:

1. ‚úÖ RLS HABILITADO na tabela workout_videos
2. ‚úÖ POL√çTICA permite usu√°rios autenticados verem lista de v√≠deos
3. ‚úÖ ExpertVideoGuard continua controlando acesso aos links no Flutter
4. ‚úÖ Usu√°rios basic veem lista mas n√£o conseguem reproduzir v√≠deos expert
5. ‚úÖ Usu√°rios expert veem e reproduzem tudo

COMPORTAMENTO ESPERADO:
- üë§ Usu√°rio BASIC: V√™ lista, mas videos expert mostram overlay de bloqueio
- üåü Usu√°rio EXPERT: V√™ lista e reproduz todos os v√≠deos
- ‚ùå Usu√°rio N√ÉO AUTENTICADO: N√£o v√™ nenhum v√≠deo

PROXIMOS PASSOS:
1. Execute este script no Supabase
2. Teste cria√ß√£o de novo usu√°rio (deve ser account_type = 'basic')
3. Verifique que v√≠deos expert s√£o bloqueados no app
4. Teste com usu√°rio expert (se houver)
*/
