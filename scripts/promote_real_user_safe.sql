-- ================================================================
-- PROMOVER USU√ÅRIO REAL - VERS√ÉO SUPER SEGURA
-- Este script verifica tudo antes de promover para evitar erros
-- ================================================================

-- ‚ö†Ô∏è  SUBSTITUA O EMAIL ABAIXO PELO EMAIL REAL DO CLIENTE ‚ö†Ô∏è
-- EXEMPLO: 'cliente@email.com'

DO $$
DECLARE
  target_email TEXT := 'EMAIL_DO_CLIENTE@SUBSTITUIR.com';  -- üëà MUDE AQUI
  user_found BOOLEAN := FALSE;
  user_id_found UUID;
  auth_user_exists BOOLEAN := FALSE;
  profile_exists BOOLEAN := FALSE;
  result JSON;
BEGIN
  -- ================================================================
  -- 1. VERIFICA√á√ïES DE SEGURAN√áA
  -- ================================================================
  
  RAISE NOTICE '';
  RAISE NOTICE 'üîç VERIFICANDO USU√ÅRIO: %', target_email;
  RAISE NOTICE '================================';
  
  -- Verificar se email est√° em formato v√°lido
  IF target_email = 'EMAIL_DO_CLIENTE@SUBSTITUIR.com' THEN
    RAISE EXCEPTION '‚ùå ERRO: Voc√™ precisa substituir o email de exemplo pelo email real do cliente!';
  END IF;
  
  -- Verificar se usu√°rio existe em profiles
  SELECT id INTO user_id_found FROM profiles WHERE email = target_email;
  IF FOUND THEN
    profile_exists := TRUE;
    RAISE NOTICE '‚úÖ Usu√°rio encontrado em profiles: %', user_id_found;
  ELSE
    RAISE NOTICE '‚ùå Usu√°rio N√ÉO encontrado em profiles';
  END IF;
  
  -- Verificar se usu√°rio existe em auth.users
  IF profile_exists THEN
    SELECT EXISTS(SELECT 1 FROM auth.users WHERE id = user_id_found) INTO auth_user_exists;
    IF auth_user_exists THEN
      RAISE NOTICE '‚úÖ Usu√°rio existe em auth.users';
      user_found := TRUE;
    ELSE
      RAISE NOTICE '‚ùå Usu√°rio N√ÉO existe em auth.users (problema de sincroniza√ß√£o)';
    END IF;
  END IF;
  
  -- Verificar se j√° √© expert
  IF user_found THEN
    IF EXISTS(SELECT 1 FROM user_progress_level WHERE user_id = user_id_found AND current_level = 'expert') THEN
      RAISE NOTICE '‚ö†Ô∏è  Usu√°rio j√° √© EXPERT! Continuando para atualizar data de expira√ß√£o...';
    ELSE
      RAISE NOTICE 'üìù Usu√°rio atual: BASIC (ser√° promovido para EXPERT)';
    END IF;
  END IF;
  
  -- ================================================================
  -- 2. EXECUTAR PROMO√á√ÉO (se passou em todas as verifica√ß√µes)
  -- ================================================================
  
  IF user_found THEN
    RAISE NOTICE '';
    RAISE NOTICE 'üöÄ PROMOVENDO USU√ÅRIO...';
    RAISE NOTICE '=====================';
    
    -- Chamar fun√ß√£o de promo√ß√£o
    SELECT update_user_level_by_email(
      target_email,
      'expert',
      (NOW() + INTERVAL '30 days')::timestamp
    ) INTO result;
    
    -- Mostrar resultado
    RAISE NOTICE 'Resultado: %', result;
    
    -- Verificar se deu certo
    IF result->>'success' = 'true' THEN
      RAISE NOTICE '';
      RAISE NOTICE 'üéâ SUCESSO! Usu√°rio promovido para EXPERT!';
      RAISE NOTICE 'üìÖ Acesso v√°lido at√©: %', (NOW() + INTERVAL '30 days')::date;
    ELSE
      RAISE NOTICE '';
      RAISE NOTICE '‚ùå ERRO na promo√ß√£o: %', result->>'error';
    END IF;
    
  ELSE
    RAISE NOTICE '';
    RAISE NOTICE 'üö´ PROMO√á√ÉO CANCELADA - Usu√°rio n√£o pode ser promovido';
    RAISE NOTICE 'Motivos poss√≠veis:';
    RAISE NOTICE '- Email n√£o encontrado em profiles';
    RAISE NOTICE '- Usu√°rio n√£o sincronizado com auth.users';
    RAISE NOTICE '- Problema na estrutura do banco de dados';
    RAISE NOTICE '';
    RAISE NOTICE 'üí° SOLU√á√ïES:';
    RAISE NOTICE '1. Verifique se o email est√° correto';
    RAISE NOTICE '2. Execute: sql/fix_user_not_found_issue_complete.sql';
    RAISE NOTICE '3. Ou adicione como pendente manualmente';
  END IF;
  
END $$;

-- ================================================================
-- 3. VERIFICAR RESULTADO DA PROMO√á√ÉO
-- ================================================================

-- Verificar se o usu√°rio foi promovido (SUBSTITUA O EMAIL)
SELECT 
  p.email,
  p.name,
  upl.current_level,
  upl.level_expires_at,
  array_length(upl.unlocked_features, 1) as total_features,
  CASE 
    WHEN upl.current_level = 'expert' THEN 'üéâ PROMOVIDO COM SUCESSO!'
    WHEN upl.current_level = 'basic' THEN '‚ùå AINDA √â B√ÅSICO'
    ELSE '‚ùì STATUS INDEFINIDO'
  END as status_promocao,
  CASE 
    WHEN upl.level_expires_at IS NULL THEN '‚ôæÔ∏è  Permanente'
    WHEN upl.level_expires_at > NOW() THEN '‚úÖ Ativo at√© ' || upl.level_expires_at::date
    ELSE '‚ùå Expirado'
  END as status_acesso
FROM profiles p
LEFT JOIN user_progress_level upl ON p.id = upl.user_id
WHERE p.email = 'EMAIL_DO_CLIENTE@SUBSTITUIR.com';  -- üëà MUDE AQUI TAMB√âM

-- ================================================================
-- 4. LISTAR TODOS OS EXPERTS ATUAIS
-- ================================================================

SELECT 
  'üìä USU√ÅRIOS EXPERT ATUAIS:' as info;

SELECT 
  p.email,
  p.name,
  upl.current_level,
  upl.level_expires_at,
  CASE 
    WHEN upl.level_expires_at IS NULL THEN '‚ôæÔ∏è  Permanente'
    WHEN upl.level_expires_at > NOW() THEN '‚úÖ Ativo'
    ELSE '‚ùå Expirado'
  END as status_acesso,
  upl.created_at as promovido_em
FROM profiles p
JOIN user_progress_level upl ON p.id = upl.user_id
WHERE upl.current_level = 'expert'
ORDER BY upl.created_at DESC
LIMIT 10;

-- ================================================================
-- INSTRU√á√ïES DE USO:
-- ================================================================

-- 1. SUBSTITUA o email 'EMAIL_DO_CLIENTE@SUBSTITUIR.com' pelo email real
-- 2. EXECUTE este script completo no SQL Editor do Supabase
-- 3. VERIFIQUE os resultados nas mensagens do console
-- 4. CONFIRME na tabela de resultados se a promo√ß√£o funcionou 