-- Limpeza e corre√ß√£o final das pol√≠ticas RLS

-- 1. REMOVER todas as pol√≠ticas conflitantes
DROP POLICY IF EXISTS "Debug: Apenas experts veem v√≠deos" ON workout_videos;
DROP POLICY IF EXISTS "SUPER_STRICT: S√≥ experts veem v√≠deos" ON workout_videos;
DROP POLICY IF EXISTS "Auto: Apenas experts veem v√≠deos" ON workout_videos;

-- 2. VERIFICAR se n√£o h√° mais pol√≠ticas
SELECT 'Pol√≠ticas restantes:' as status, COUNT(*) as total
FROM pg_policies 
WHERE tablename = 'workout_videos';

-- 3. CRIAR uma √∫nica pol√≠tica correta e simples
CREATE POLICY "workout_videos_expert_only"
ON workout_videos
FOR SELECT
TO authenticated
USING (
    -- V√≠deos p√∫blicos: todos podem ver
    (requires_expert_access = false OR requires_expert_access IS NULL)
    OR
    -- V√≠deos expert: s√≥ experts podem ver
    (
        requires_expert_access = true 
        AND EXISTS (
            SELECT 1 
            FROM user_progress_level upl
            WHERE upl.user_id = auth.uid() 
            AND upl.current_level = 'expert'
            AND (upl.level_expires_at IS NULL OR upl.level_expires_at > now())
        )
    )
);

-- 4. VERIFICAR a pol√≠tica criada
SELECT 
    policyname,
    cmd,
    roles,
    qual
FROM pg_policies 
WHERE tablename = 'workout_videos';

-- 5. CONTAGEM de v√≠deos por tipo
SELECT 
    'V√≠deos p√∫blicos (todos podem ver):' as tipo,
    COUNT(*) as total
FROM workout_videos 
WHERE requires_expert_access = false OR requires_expert_access IS NULL;

SELECT 
    'V√≠deos expert-only (s√≥ experts veem):' as tipo,
    COUNT(*) as total
FROM workout_videos 
WHERE requires_expert_access = true;

-- 6. INSTRU√á√ïES PARA TESTE NO FLUTTER
SELECT 'üß™ TESTE NO FLUTTER:' as instrucoes;
SELECT '1. Fa√ßa login com usu√°rio BASIC' as passo1;
SELECT '2. Execute: await supabase.from("workout_videos").select()' as passo2;
SELECT '3. Deve retornar apenas v√≠deos p√∫blicos (n√£o deve incluir 40 v√≠deos de parceiros)' as passo3;
SELECT '4. Fa√ßa login com usu√°rio EXPERT' as passo4;
SELECT '5. Execute: await supabase.from("workout_videos").select()' as passo5;
SELECT '6. Deve retornar TODOS os v√≠deos (incluindo 40 v√≠deos de parceiros)' as passo6;

-- 7. VERIFICAR IDs de usu√°rios para teste
SELECT 
    'üë§ USU√ÅRIO BASIC PARA TESTE:' as tipo,
    au.id,
    au.email,
    upl.current_level
FROM auth.users au
JOIN user_progress_level upl ON upl.user_id = au.id
WHERE upl.current_level = 'basic'
LIMIT 1;

SELECT 
    'üë®‚Äçüíº USU√ÅRIO EXPERT PARA TESTE:' as tipo,
    au.id,
    au.email,
    upl.current_level
FROM auth.users au
JOIN user_progress_level upl ON upl.user_id = au.id
WHERE upl.current_level = 'expert'
LIMIT 1;

-- 8. STATUS FINAL
SELECT 'STATUS FINAL:' as status;
SELECT '‚úÖ RLS ativo na tabela workout_videos' as config1;
SELECT '‚úÖ Pol√≠tica √∫nica "workout_videos_expert_only"' as config2;
SELECT '‚úÖ V√≠deos p√∫blicos: vis√≠veis para todos' as config3;
SELECT '‚úÖ V√≠deos de parceiros: s√≥ para experts' as config4;
SELECT '‚ö†Ô∏è  Teste deve ser feito no FLUTTER, n√£o no SQL Editor' as importante; 