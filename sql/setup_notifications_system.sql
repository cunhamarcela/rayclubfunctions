-- =====================================================
-- SISTEMA COMPLETO DE NOTIFICA√á√ïES - RAY CLUB
-- =====================================================

-- 1. Criar tabela de templates de notifica√ß√µes
CREATE TABLE IF NOT EXISTS public.notification_templates (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  category TEXT NOT NULL,         -- Ex: 'receita', 'desafio', 'pdf', 'treino'
  trigger_type TEXT NOT NULL,     -- Ex: 'manha', 'sem_treino', 'ultrapassado'
  title TEXT,                     -- Opcional
  body TEXT NOT NULL,             -- Mensagem da notifica√ß√£o
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- 2. Adicionar campo fcm_token √† tabela profiles
ALTER TABLE public.profiles
ADD COLUMN IF NOT EXISTS fcm_token TEXT;

-- 3. Inserir templates de notifica√ß√µes
INSERT INTO public.notification_templates (category, trigger_type, title, body)
VALUES 
-- Notifica√ß√µes de manh√£
('receita', 'manha', 'Bom dia, Ray!', 'Que tal um caf√© da manh√£ saud√°vel? Veja nossa receita especial para come√ßar o dia com energia! ü•£'),
('motivacao', 'manha', 'Hora de brilhar!', 'Um novo dia chegou! Que tal registrar um treino e conquistar seus objetivos? üí™'),
('agua', 'manha', 'Hidrate-se!', 'Lembre-se de beber √°gua! Comece o dia hidratando seu corpo üíß'),

-- Notifica√ß√µes de tarde
('treino', 'tarde', 'Pausa para o treino!', 'Que tal uma pausa para se exercitar? Seus m√∫sculos v√£o agradecer! üèÉ‚Äç‚ôÄÔ∏è'),
('receita', 'tarde', 'Lanche saud√°vel', 'Hora do lanche! Confira nossas op√ß√µes saud√°veis para manter a energia üçé'),
('desafio', 'tarde', 'Desafio em andamento', 'Como est√° seu desafio hoje? Registre seu progresso e mantenha-se no topo! üèÜ'),

-- Notifica√ß√µes de noite
('reflexao', 'noite', 'Fim de dia', 'Como foi seu dia? Registre seus treinos e veja seu progresso! ‚≠ê'),
('receita', 'noite', 'Jantar nutritivo', 'Hora do jantar! Que tal uma refei√ß√£o balanceada para encerrar o dia? üçΩÔ∏è'),
('sono', 'noite', 'Boa noite!', 'Lembre-se: um bom sono √© essencial para a recupera√ß√£o muscular. Durma bem! üò¥'),

-- Notifica√ß√µes comportamentais
('treino', 'sem_treino', 'Sentimos sua falta!', 'Voc√™ n√£o registrou treinos hoje. Que tal uma atividade r√°pida? Seu corpo agradece! üí™'),
('desafio', 'ultrapassado', 'Alerta de ranking!', 'Voc√™ foi ultrapassado no desafio! Registre um treino agora e recupere sua posi√ß√£o! üí¢'),
('meta', 'meta_atingida', 'Parab√©ns!', 'Meta atingida! Voc√™ est√° no caminho certo. Continue assim! üéâ'),
('agua', 'pouca_agua', 'Hidrate-se mais!', 'Voc√™ bebeu pouca √°gua hoje. Que tal um copo agora? üíß'),

-- Notifica√ß√µes de conte√∫do
('pdf', 'hipertrofia', 'Guia de Hipertrofia', 'Buscando ganhar massa? Baixe nosso guia completo de treinos e alimenta√ß√£o! üìö'),
('pdf', 'emagrecimento', 'Guia de Emagrecimento', 'Quer perder peso de forma saud√°vel? Confira nosso guia especializado! üìñ'),
('video', 'novo_treino', 'Novo treino dispon√≠vel!', 'Um novo v√≠deo de treino foi adicionado! Venha conferir üé•'),
('receita', 'nova_receita', 'Nova receita!', 'Uma deliciosa receita foi adicionada ao app. N√£o perca! üë©‚Äçüç≥'),

-- Notifica√ß√µes de comunidade
('social', 'novo_post', 'Atividade na comunidade', 'H√° novidades no feed! Veja o que a comunidade Ray est√° compartilhando üë•'),
('social', 'curtida', 'Seu post foi curtido!', 'Algu√©m curtiu seu post! Veja a intera√ß√£o na comunidade ‚ù§Ô∏è'),
('beneficio', 'novo_cupom', 'Novo benef√≠cio!', 'Um novo cupom exclusivo est√° dispon√≠vel para voc√™! üéÅ'),
('beneficio', 'cupom_expirando', 'Cupom expirando!', 'Seu cupom expira em breve! N√£o perca a oportunidade de usar üèÉ‚Äç‚ôÄÔ∏è')

ON CONFLICT DO NOTHING;

-- 4. Criar √≠ndices para performance
CREATE INDEX IF NOT EXISTS idx_notification_templates_trigger_type 
ON public.notification_templates(trigger_type);

CREATE INDEX IF NOT EXISTS idx_notification_templates_category 
ON public.notification_templates(category);

CREATE INDEX IF NOT EXISTS idx_profiles_fcm_token 
ON public.profiles(fcm_token) WHERE fcm_token IS NOT NULL;

-- 5. Habilitar RLS na tabela notification_templates
ALTER TABLE public.notification_templates ENABLE ROW LEVEL SECURITY;

-- Pol√≠tica para permitir leitura dos templates (para a fun√ß√£o)
CREATE POLICY "notification_templates_select_policy" ON public.notification_templates
FOR SELECT USING (true);

-- 6. Fun√ß√£o para buscar templates por trigger_type
CREATE OR REPLACE FUNCTION get_notification_templates(p_trigger_type TEXT)
RETURNS TABLE (
  id UUID,
  category TEXT,
  trigger_type TEXT,
  title TEXT,
  body TEXT
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  RETURN QUERY
  SELECT 
    nt.id,
    nt.category,
    nt.trigger_type,
    nt.title,
    nt.body
  FROM notification_templates nt
  WHERE nt.trigger_type = p_trigger_type;
END;
$$;

-- 7. Fun√ß√£o para buscar usu√°rios com FCM token
CREATE OR REPLACE FUNCTION get_users_with_fcm_token()
RETURNS TABLE (
  id UUID,
  fcm_token TEXT,
  name TEXT
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  RETURN QUERY
  SELECT 
    p.id,
    p.fcm_token,
    p.name
  FROM profiles p
  WHERE p.fcm_token IS NOT NULL 
    AND p.fcm_token != '';
END;
$$;

-- 8. Coment√°rios para documenta√ß√£o
COMMENT ON TABLE notification_templates IS 'Templates de notifica√ß√µes para envio autom√°tico baseado em triggers';
COMMENT ON COLUMN notification_templates.category IS 'Categoria da notifica√ß√£o (receita, treino, desafio, etc.)';
COMMENT ON COLUMN notification_templates.trigger_type IS 'Tipo de trigger que ativa a notifica√ß√£o (manha, tarde, noite, sem_treino, etc.)';
COMMENT ON COLUMN notification_templates.title IS 'T√≠tulo da notifica√ß√£o (opcional)';
COMMENT ON COLUMN notification_templates.body IS 'Corpo da mensagem da notifica√ß√£o';

COMMENT ON COLUMN profiles.fcm_token IS 'Token FCM para envio de notifica√ß√µes push';

-- 9. Verificar se tudo foi criado corretamente
DO $$
BEGIN
  -- Verificar se a tabela foi criada
  IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'notification_templates') THEN
    RAISE NOTICE 'Tabela notification_templates criada com sucesso';
  END IF;
  
  -- Verificar se o campo fcm_token foi adicionado
  IF EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'fcm_token') THEN
    RAISE NOTICE 'Campo fcm_token adicionado √† tabela profiles com sucesso';
  END IF;
  
  -- Contar templates inseridos
  DECLARE
    template_count INTEGER;
  BEGIN
    SELECT COUNT(*) INTO template_count FROM notification_templates;
    RAISE NOTICE 'Total de templates inseridos: %', template_count;
  END;
END $$;
