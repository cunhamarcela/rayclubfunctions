// Mocks generated by Mockito 5.4.5 from annotations
// in ray_club_app/test/features/dashboard/dashboard_fitness_filters_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ray_club_app/features/dashboard/models/dashboard_fitness_data.dart'
    as _i2;
import 'package:ray_club_app/features/dashboard/models/dashboard_period.dart'
    as _i5;
import 'package:ray_club_app/features/dashboard/repositories/dashboard_fitness_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDashboardFitnessData_0 extends _i1.SmartFake
    implements _i2.DashboardFitnessData {
  _FakeDashboardFitnessData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDayDetailsData_1 extends _i1.SmartFake
    implements _i2.DayDetailsData {
  _FakeDayDetailsData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DashboardFitnessRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardFitnessRepository extends _i1.Mock
    implements _i3.DashboardFitnessRepository {
  MockDashboardFitnessRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DashboardFitnessData> getDashboardFitnessData({
    DateTime? month,
    _i5.DashboardPeriod? period = _i5.DashboardPeriod.thisMonth,
    _i5.DateRange? customRange,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDashboardFitnessData,
          [],
          {
            #month: month,
            #period: period,
            #customRange: customRange,
          },
        ),
        returnValue: _i4.Future<_i2.DashboardFitnessData>.value(
            _FakeDashboardFitnessData_0(
          this,
          Invocation.method(
            #getDashboardFitnessData,
            [],
            {
              #month: month,
              #period: period,
              #customRange: customRange,
            },
          ),
        )),
      ) as _i4.Future<_i2.DashboardFitnessData>);

  @override
  _i4.Future<_i2.DayDetailsData> getDayDetails({required DateTime? date}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDayDetails,
          [],
          {#date: date},
        ),
        returnValue: _i4.Future<_i2.DayDetailsData>.value(_FakeDayDetailsData_1(
          this,
          Invocation.method(
            #getDayDetails,
            [],
            {#date: date},
          ),
        )),
      ) as _i4.Future<_i2.DayDetailsData>);

  @override
  _i4.Future<void> refreshDashboardData() => (super.noSuchMethod(
        Invocation.method(
          #refreshDashboardData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<DateTime> getLatestWorkoutMonth() => (super.noSuchMethod(
        Invocation.method(
          #getLatestWorkoutMonth,
          [],
        ),
        returnValue: _i4.Future<DateTime>.value(_FakeDateTime_2(
          this,
          Invocation.method(
            #getLatestWorkoutMonth,
            [],
          ),
        )),
      ) as _i4.Future<DateTime>);
}
