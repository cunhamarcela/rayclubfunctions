// Mocks generated by Mockito 5.4.5 from annotations
// in ray_club_app/test/features/goals/weekly_goal_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ray_club_app/features/goals/models/weekly_goal.dart' as _i2;
import 'package:ray_club_app/features/goals/repositories/weekly_goal_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeeklyGoal_0 extends _i1.SmartFake implements _i2.WeeklyGoal {
  _FakeWeeklyGoal_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeeklyGoalRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeeklyGoalRepository extends _i1.Mock
    implements _i3.WeeklyGoalRepository {
  MockWeeklyGoalRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeeklyGoal> getOrCreateCurrentWeeklyGoal() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrCreateCurrentWeeklyGoal,
          [],
        ),
        returnValue: _i4.Future<_i2.WeeklyGoal>.value(_FakeWeeklyGoal_0(
          this,
          Invocation.method(
            #getOrCreateCurrentWeeklyGoal,
            [],
          ),
        )),
      ) as _i4.Future<_i2.WeeklyGoal>);

  @override
  _i4.Future<_i2.WeeklyGoal> updateWeeklyGoal(int? goalMinutes) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWeeklyGoal,
          [goalMinutes],
        ),
        returnValue: _i4.Future<_i2.WeeklyGoal>.value(_FakeWeeklyGoal_0(
          this,
          Invocation.method(
            #updateWeeklyGoal,
            [goalMinutes],
          ),
        )),
      ) as _i4.Future<_i2.WeeklyGoal>);

  @override
  _i4.Future<_i2.WeeklyGoal> addWorkoutMinutes(int? minutes) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWorkoutMinutes,
          [minutes],
        ),
        returnValue: _i4.Future<_i2.WeeklyGoal>.value(_FakeWeeklyGoal_0(
          this,
          Invocation.method(
            #addWorkoutMinutes,
            [minutes],
          ),
        )),
      ) as _i4.Future<_i2.WeeklyGoal>);

  @override
  _i4.Future<_i2.WeeklyGoal> getWeeklyGoalStatus() => (super.noSuchMethod(
        Invocation.method(
          #getWeeklyGoalStatus,
          [],
        ),
        returnValue: _i4.Future<_i2.WeeklyGoal>.value(_FakeWeeklyGoal_0(
          this,
          Invocation.method(
            #getWeeklyGoalStatus,
            [],
          ),
        )),
      ) as _i4.Future<_i2.WeeklyGoal>);

  @override
  _i4.Future<Map<String, dynamic>> syncExistingWorkouts() =>
      (super.noSuchMethod(
        Invocation.method(
          #syncExistingWorkouts,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<List<_i2.WeeklyGoal>> getWeeklyGoalsHistory({int? limit = 12}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyGoalsHistory,
          [],
          {#limit: limit},
        ),
        returnValue: _i4.Future<List<_i2.WeeklyGoal>>.value(<_i2.WeeklyGoal>[]),
      ) as _i4.Future<List<_i2.WeeklyGoal>>);

  @override
  _i4.Stream<_i2.WeeklyGoal?> watchCurrentWeeklyGoal() => (super.noSuchMethod(
        Invocation.method(
          #watchCurrentWeeklyGoal,
          [],
        ),
        returnValue: _i4.Stream<_i2.WeeklyGoal?>.empty(),
      ) as _i4.Stream<_i2.WeeklyGoal?>);
}
