// Mocks generated by Mockito 5.4.5 from annotations
// in ray_club_app/test/features/workout/providers/running_materials_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:ray_club_app/models/material.dart' as _i5;
import 'package:ray_club_app/services/pdf_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PdfService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPdfService extends _i1.Mock implements _i2.PdfService {
  MockPdfService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> generateSignedUrl(
    String? filePath, {
    int? expiresInSeconds = 60,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateSignedUrl,
          [filePath],
          {#expiresInSeconds: expiresInSeconds},
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateSignedUrl,
            [filePath],
            {#expiresInSeconds: expiresInSeconds},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  String createViewerUrl(String? signedUrl) => (super.noSuchMethod(
        Invocation.method(
          #createViewerUrl,
          [signedUrl],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #createViewerUrl,
            [signedUrl],
          ),
        ),
      ) as String);

  @override
  _i3.Future<List<_i5.Material>> getMaterialsByContext(
          _i5.MaterialContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMaterialsByContext,
          [context],
        ),
        returnValue: _i3.Future<List<_i5.Material>>.value(<_i5.Material>[]),
      ) as _i3.Future<List<_i5.Material>>);

  @override
  _i3.Future<List<_i5.Material>> getMaterialsByWorkoutVideo(
          String? workoutVideoId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMaterialsByWorkoutVideo,
          [workoutVideoId],
        ),
        returnValue: _i3.Future<List<_i5.Material>>.value(<_i5.Material>[]),
      ) as _i3.Future<List<_i5.Material>>);

  @override
  _i3.Future<_i5.Material?> getMaterialById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getMaterialById,
          [id],
        ),
        returnValue: _i3.Future<_i5.Material?>.value(),
      ) as _i3.Future<_i5.Material?>);
}
