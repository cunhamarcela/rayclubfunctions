import 'dart:io';

void main() async {
  // print('üçé TESTE DE CONFIGURA√á√ÉO - SIGN IN WITH APPLE');
  // print('=' * 60);
  
  await _testIOSConfiguration();
  await _testEntitlements();
  _showResults();
}

Future<void> _testIOSConfiguration() async {
  // print('\nüì± CONFIGURA√á√ÉO iOS');
  // print('-' * 30);
  
  // Testar Info.plist
  final infoPlist = File('ios/Runner/Info.plist');
  if (await infoPlist.exists()) {
    final content = await infoPlist.readAsString();
    
    // print('‚úÖ Info.plist encontrado');
    
    // Verificar URL schemes
    if (content.contains('rayclub') && content.contains('com.rayclub.app')) {
      // print('‚úÖ URL Schemes configurados (rayclub, com.rayclub.app)');
    } else {
      // print('‚ùå URL Schemes n√£o encontrados');
    }
    
    // Verificar App Transport Security
    if (content.contains('appleid.apple.com') && content.contains('zsbbgchsjiuicwvtrldn.supabase.co')) {
      // print('‚úÖ App Transport Security configurado para Apple e Supabase');
    } else {
      // print('‚ö†Ô∏è  App Transport Security pode estar incompleto');
    }
    
    // Verificar Google Client ID
    if (content.contains('GIDClientID')) {
      // print('‚úÖ Google Client ID configurado');
    } else {
      // print('‚ö†Ô∏è  Google Client ID n√£o encontrado');
    }
  } else {
    // print('‚ùå Info.plist n√£o encontrado');
  }
}

Future<void> _testEntitlements() async {
  // print('\nüîë ENTITLEMENTS');
  // print('-' * 30);
  
  final entitlements = File('ios/Runner/Runner.entitlements');
  if (await entitlements.exists()) {
    final content = await entitlements.readAsString();
    
    // print('‚úÖ Runner.entitlements encontrado');
    
    // Verificar Sign in with Apple
    if (content.contains('com.apple.developer.applesignin')) {
      // print('‚úÖ Sign in with Apple entitlement configurado');
    } else {
      // print('‚ùå Sign in with Apple entitlement n√£o encontrado');
    }
    
    // Verificar Associated Domains
    if (content.contains('com.apple.developer.associated-domains')) {
      // print('‚úÖ Associated Domains configurado');
      
      if (content.contains('zsbbgchsjiuicwvtrldn.supabase.co')) {
        // print('‚úÖ Domain do Supabase inclu√≠do nos Associated Domains');
      } else {
        // print('‚ö†Ô∏è  Domain do Supabase n√£o encontrado nos Associated Domains');
      }
    } else {
      // print('‚ùå Associated Domains n√£o configurado');
    }
  } else {
    // print('‚ùå Runner.entitlements n√£o encontrado');
  }
}

void _showResults() {
  // print('\n' + '=' * 60);
  // print('üìã RESUMO DAS ATUALIZA√á√ïES');
  // print('=' * 60);
  // print('');
  // print('‚úÖ DEPEND√äNCIAS ATUALIZADAS:');
  // print('   ‚Ä¢ sign_in_with_apple: 5.0.0 ‚Üí 6.1.4');
  // print('   ‚Ä¢ supabase_flutter: 2.3.2 ‚Üí 2.5.6');
  // print('   ‚Ä¢ supabase: 2.0.8 ‚Üí 2.2.2');
  // print('   ‚Ä¢ postgrest: 2.0.0 ‚Üí 2.1.1');
  // print('   ‚Ä¢ google_sign_in: 6.1.6 ‚Üí 6.2.1');
  // print('');
  // print('‚úÖ INFO.PLIST ATUALIZADO:');
  // print('   ‚Ä¢ App Transport Security melhorado');
  // print('   ‚Ä¢ URL scheme para Apple OAuth adicionado');
  // print('   ‚Ä¢ Dom√≠nios espec√≠ficos do Supabase e Apple');
  // print('   ‚Ä¢ Privacy manifest adicionado');
  // print('');
  // print('‚úÖ RUNNER.ENTITLEMENTS ATUALIZADO:');
  // print('   ‚Ä¢ Associated Domain do Supabase adicionado');
  // print('');
  // print('üîç PR√ìXIMOS PASSOS:');
  // print('   1. Testar em dispositivo f√≠sico (iPhone/iPad)');
  // print('   2. Verificar Service ID no Apple Developer Console');
  // print('   3. Confirmar Redirect URLs no Supabase Auth');
  // print('   4. Verificar se o erro persiste');
  // print('');
  // print('‚ö†Ô∏è  IMPORTANTE:');
  // print('   ‚Ä¢ Sign in with Apple N√ÉO funciona no simulador');
  // print('   ‚Ä¢ Necess√°rio dispositivo f√≠sico para teste');
  // print('   ‚Ä¢ Service ID: com.rayclub.auth deve estar ativo');
} 