-- üéØ TESTE DE CASOS EXTREMOS E EMPATES NO RANKING
-- üìã Valida√ß√£o de cen√°rios complexos do sistema de ranking

-- ======================================
-- üßπ LIMPEZA E PREPARA√á√ÉO PARA TESTES DE EMPATE
-- ======================================

DO $$
DECLARE
    test_challenge_id UUID := 'd8f032b4-1234-5678-9abc-def123456789';
    test_user_A UUID := 'a1b2c3d4-e5f6-7890-1234-567890abcdef';
    test_user_B UUID := 'b2c3d4e5-f6a7-8901-2345-678901bcdef0';
    test_user_C UUID := 'c3d4e5f6-a7b8-9012-3456-789012cdef12';
    test_user_D UUID := 'd4e5f6a7-b8c9-0123-4567-890123def345';
BEGIN
    RAISE NOTICE 'üßπ LIMPANDO dados de teste de empate...';
    
    -- Limpar dados espec√≠ficos do teste
    DELETE FROM challenge_check_ins WHERE challenge_id = test_challenge_id;
    DELETE FROM challenge_progress WHERE challenge_id = test_challenge_id;
    DELETE FROM workout_records WHERE challenge_id = test_challenge_id;
    DELETE FROM challenge_participants WHERE challenge_id = test_challenge_id;
    
    RAISE NOTICE '‚úÖ Limpeza conclu√≠da';
END $$;

-- ======================================
-- üìä PREPARA√á√ÉO PARA TESTES DE EMPATE
-- ======================================

DO $$
DECLARE
    test_challenge_id UUID := 'd8f032b4-1234-5678-9abc-def123456789';
    test_user_A UUID := 'a1b2c3d4-e5f6-7890-1234-567890abcdef';
    test_user_B UUID := 'b2c3d4e5-f6a7-8901-2345-678901bcdef0';
    test_user_C UUID := 'c3d4e5f6-a7b8-9012-3456-789012cdef12';
    test_user_D UUID := 'd4e5f6a7-b8c9-0123-4567-890123def345';
BEGIN
    RAISE NOTICE 'üìä PREPARANDO dados para teste de empate...';
    
    -- Criar usu√°rios de teste
    INSERT INTO profiles (id, name, photo_url) VALUES 
    (test_user_A, 'Usu√°rio A (Empate)', 'https://example.com/photoA.jpg'),
    (test_user_B, 'Usu√°rio B (Empate)', 'https://example.com/photoB.jpg'),
    (test_user_C, 'Usu√°rio C (Empate)', 'https://example.com/photoC.jpg'),
    (test_user_D, 'Usu√°rio D (Menos Treinos)', 'https://example.com/photoD.jpg')
    ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, photo_url = EXCLUDED.photo_url;
    
    -- Criar desafio para teste de empate
    INSERT INTO challenges (
        id, title, description, start_date, end_date, 
        active, status, points, type, is_official
    ) VALUES (
        test_challenge_id, 
        'Desafio Teste Empate', 
        'Teste de crit√©rios de desempate no ranking',
        CURRENT_DATE - INTERVAL '15 days',
        CURRENT_DATE + INTERVAL '15 days',
        true, 'active', 300, 'fitness', true
    ) ON CONFLICT (id) DO UPDATE SET
        title = EXCLUDED.title,
        active = EXCLUDED.active,
        status = EXCLUDED.status;
    
    -- Inscrever usu√°rios no desafio
    INSERT INTO challenge_participants (user_id, challenge_id, joined_at) VALUES 
    (test_user_A, test_challenge_id, NOW() - INTERVAL '10 days'),
    (test_user_B, test_challenge_id, NOW() - INTERVAL '10 days'),
    (test_user_C, test_challenge_id, NOW() - INTERVAL '10 days'),
    (test_user_D, test_challenge_id, NOW() - INTERVAL '10 days')
    ON CONFLICT (user_id, challenge_id) DO NOTHING;
    
    RAISE NOTICE '‚úÖ Dados de teste de empate preparados';
END $$;

-- ======================================
-- ü•á CEN√ÅRIO DE EMPATE: MESMO N√öMERO DE PONTOS
-- ======================================

DO $$
DECLARE
    test_challenge_id UUID := 'd8f032b4-1234-5678-9abc-def123456789';
    test_user_A UUID := 'a1b2c3d4-e5f6-7890-1234-567890abcdef';
    test_user_B UUID := 'b2c3d4e5-f6a7-8901-2345-678901bcdef0';
    test_user_C UUID := 'c3d4e5f6-a7b8-9012-3456-789012cdef12';
    test_user_D UUID := 'd4e5f6a7-b8c9-0123-4567-890123def345';
BEGIN
    RAISE NOTICE 'ü•á TESTANDO cen√°rio de empate no ranking...';
    
    -- ========================================
    -- USU√ÅRIO A: 2 check-ins (20 pontos) + 5 treinos totais
    -- ========================================
    
    -- Treinos v√°lidos que pontuam
    PERFORM record_workout_basic(
        test_user_A, 'TREINO-A-001', 'Corrida', 'cardio', 
        60, CURRENT_DATE - INTERVAL '5 days', test_challenge_id, 'Check-in 1'
    );
    
    PERFORM record_workout_basic(
        test_user_A, 'TREINO-A-002', 'Muscula√ß√£o', 'strength', 
        50, CURRENT_DATE - INTERVAL '3 days', test_challenge_id, 'Check-in 2'
    );
    
    -- Treinos extras que N√ÉO pontuam (mas contam para desempate)
    PERFORM record_workout_basic(
        test_user_A, 'TREINO-A-003', 'Caminhada', 'cardio', 
        30, CURRENT_DATE - INTERVAL '2 days', test_challenge_id, 'Muito curto'
    );
    
    PERFORM record_workout_basic(
        test_user_A, 'TREINO-A-004', 'Yoga', 'flexibility', 
        35, CURRENT_DATE - INTERVAL '1 days', test_challenge_id, 'Muito curto'
    );
    
    PERFORM record_workout_basic(
        test_user_A, 'TREINO-A-005', 'Pilates', 'strength', 
        40, CURRENT_DATE, test_challenge_id, 'Muito curto'
    );
    
    -- ========================================
    -- USU√ÅRIO B: 2 check-ins (20 pontos) + 3 treinos totais
    -- ========================================
    
    -- Treinos v√°lidos que pontuam
    PERFORM record_workout_basic(
        test_user_B, 'TREINO-B-001', 'Nata√ß√£o', 'cardio', 
        55, CURRENT_DATE - INTERVAL '4 days', test_challenge_id, 'Check-in 1'
    );
    
    PERFORM record_workout_basic(
        test_user_B, 'TREINO-B-002', 'CrossFit', 'mixed', 
        65, CURRENT_DATE - INTERVAL '2 days', test_challenge_id, 'Check-in 2'
    );
    
    -- Treino extra que N√ÉO pontua
    PERFORM record_workout_basic(
        test_user_B, 'TREINO-B-003', 'Alongamento', 'flexibility', 
        25, CURRENT_DATE - INTERVAL '1 days', test_challenge_id, 'Muito curto'
    );
    
    -- ========================================
    -- USU√ÅRIO C: 2 check-ins (20 pontos) + 2 treinos totais
    -- ========================================
    
    -- Treinos v√°lidos que pontuam
    PERFORM record_workout_basic(
        test_user_C, 'TREINO-C-001', 'Bicicleta', 'cardio', 
        70, CURRENT_DATE - INTERVAL '6 days', test_challenge_id, 'Check-in 1'
    );
    
    PERFORM record_workout_basic(
        test_user_C, 'TREINO-C-002', 'Funcional', 'mixed', 
        45, CURRENT_DATE - INTERVAL '1 days', test_challenge_id, 'Check-in 2'
    );
    
    -- ========================================
    -- USU√ÅRIO D: 1 check-in (10 pontos) + 1 treino total
    -- ========================================
    
    PERFORM record_workout_basic(
        test_user_D, 'TREINO-D-001', 'Corrida', 'cardio', 
        90, CURRENT_DATE - INTERVAL '2 days', test_challenge_id, '√önico check-in'
    );
    
    RAISE NOTICE '‚úÖ Cen√°rio de empate criado:';
    RAISE NOTICE '   - Usu√°rio A: 20 pontos, 5 treinos totais';
    RAISE NOTICE '   - Usu√°rio B: 20 pontos, 3 treinos totais';
    RAISE NOTICE '   - Usu√°rio C: 20 pontos, 2 treinos totais';
    RAISE NOTICE '   - Usu√°rio D: 10 pontos, 1 treino total';
    
    PERFORM pg_sleep(2);
END $$;

-- ======================================
-- üìä VALIDA√á√ÉO DO CRIT√âRIO DE DESEMPATE
-- ======================================

DO $$
DECLARE
    test_challenge_id UUID := 'd8f032b4-1234-5678-9abc-def123456789';
    userA_rank INTEGER;
    userB_rank INTEGER;
    userC_rank INTEGER;
    userD_rank INTEGER;
    
    userA_workouts INTEGER;
    userB_workouts INTEGER;
    userC_workouts INTEGER;
    userD_workouts INTEGER;
BEGIN
    RAISE NOTICE 'üìä VALIDANDO crit√©rio de desempate...';
    
    -- Obter posi√ß√µes no ranking
    SELECT position INTO userA_rank
    FROM challenge_progress 
    WHERE challenge_id = test_challenge_id 
    AND user_name = 'Usu√°rio A (Empate)';
    
    SELECT position INTO userB_rank
    FROM challenge_progress 
    WHERE challenge_id = test_challenge_id 
    AND user_name = 'Usu√°rio B (Empate)';
    
    SELECT position INTO userC_rank
    FROM challenge_progress 
    WHERE challenge_id = test_challenge_id 
    AND user_name = 'Usu√°rio C (Empate)';
    
    SELECT position INTO userD_rank
    FROM challenge_progress 
    WHERE challenge_id = test_challenge_id 
    AND user_name = 'Usu√°rio D (Menos Treinos)';
    
    -- Contar treinos totais de cada usu√°rio
    SELECT COUNT(*) INTO userA_workouts
    FROM workout_records 
    WHERE user_id = 'a1b2c3d4-e5f6-7890-1234-567890abcdef';
    
    SELECT COUNT(*) INTO userB_workouts
    FROM workout_records 
    WHERE user_id = 'b2c3d4e5-f6a7-8901-2345-678901bcdef0';
    
    SELECT COUNT(*) INTO userC_workouts
    FROM workout_records 
    WHERE user_id = 'c3d4e5f6-a7b8-9012-3456-789012cdef12';
    
    SELECT COUNT(*) INTO userD_workouts
    FROM workout_records 
    WHERE user_id = 'd4e5f6a7-b8c9-0123-4567-890123def345';
    
    RAISE NOTICE 'üèÜ RANKING COM CRIT√âRIO DE DESEMPATE:';
    RAISE NOTICE '   1¬∫ lugar: Usu√°rio A - Posi√ß√£o % (5 treinos totais)', COALESCE(userA_rank, 0);
    RAISE NOTICE '   2¬∫ lugar: Usu√°rio B - Posi√ß√£o % (3 treinos totais)', COALESCE(userB_rank, 0);
    RAISE NOTICE '   3¬∫ lugar: Usu√°rio C - Posi√ß√£o % (2 treinos totais)', COALESCE(userC_rank, 0);
    RAISE NOTICE '   4¬∫ lugar: Usu√°rio D - Posi√ß√£o % (1 treino total)', COALESCE(userD_rank, 0);
    
    -- Validar se o desempate est√° correto
    IF userA_rank = 1 AND userB_rank = 2 AND userC_rank = 3 AND userD_rank = 4 THEN
        RAISE NOTICE '‚úÖ DESEMPATE CORRETO: Ranking baseado no total de treinos!';
    ELSE
        RAISE NOTICE '‚ùå ERRO NO DESEMPATE: Ranking n√£o segue crit√©rio esperado!';
    END IF;
END $$;

-- ======================================
-- üìã RANKING COMPLETO COM TODOS OS DETALHES
-- ======================================

RAISE NOTICE 'üìã RANKING DETALHADO:';

SELECT 
    position as posicao,
    user_name as nome,
    points as pontos,
    check_ins_count as check_ins,
    total_check_ins as total_check_ins,
    (SELECT COUNT(*) FROM workout_records wr 
     WHERE wr.user_id = cp.user_id) as treinos_totais_sistema,
    ROUND(completion_percentage, 2) as progresso_pct,
    last_check_in::date as ultimo_check_in,
    created_at::date as criado_em
FROM challenge_progress cp
WHERE challenge_id = 'd8f032b4-1234-5678-9abc-def123456789'
ORDER BY position ASC;

-- ======================================
-- üîç TESTE DE CASOS EXTREMOS
-- ======================================

DO $$
DECLARE
    test_challenge_id UUID := 'd8f032b4-1234-5678-9abc-def123456789';
    edge_case_results TEXT := '';
BEGIN
    RAISE NOTICE 'üîç TESTANDO casos extremos...';
    
    -- Caso 1: Verificar se total_check_ins est√° correto
    IF EXISTS (
        SELECT 1 FROM challenge_progress 
        WHERE challenge_id = test_challenge_id 
        AND check_ins_count != total_check_ins
    ) THEN
        edge_case_results := edge_case_results || '‚ùå INCONSIST√äNCIA: check_ins_count != total_check_ins; ';
    ELSE
        edge_case_results := edge_case_results || '‚úÖ Consist√™ncia check_ins OK; ';
    END IF;
    
    -- Caso 2: Verificar se todos t√™m user_name preenchido
    IF EXISTS (
        SELECT 1 FROM challenge_progress 
        WHERE challenge_id = test_challenge_id 
        AND (user_name IS NULL OR user_name = '')
    ) THEN
        edge_case_results := edge_case_results || '‚ùå ERRO: user_name vazio; ';
    ELSE
        edge_case_results := edge_case_results || '‚úÖ user_name preenchido; ';
    END IF;
    
    -- Caso 3: Verificar se completion_percentage √© calculado corretamente
    IF EXISTS (
        SELECT 1 FROM challenge_progress 
        WHERE challenge_id = test_challenge_id 
        AND completion_percentage < 0 OR completion_percentage > 100
    ) THEN
        edge_case_results := edge_case_results || '‚ùå ERRO: completion_percentage inv√°lido; ';
    ELSE
        edge_case_results := edge_case_results || '‚úÖ completion_percentage v√°lido; ';
    END IF;
    
    -- Caso 4: Verificar se posi√ß√µes s√£o √∫nicas e sequenciais
    IF EXISTS (
        SELECT position, COUNT(*) 
        FROM challenge_progress 
        WHERE challenge_id = test_challenge_id 
        GROUP BY position 
        HAVING COUNT(*) > 1
    ) THEN
        edge_case_results := edge_case_results || '‚ùå ERRO: Posi√ß√µes duplicadas; ';
    ELSE
        edge_case_results := edge_case_results || '‚úÖ Posi√ß√µes √∫nicas; ';
    END IF;
    
    RAISE NOTICE 'üîç RESULTADOS DOS CASOS EXTREMOS:';
    RAISE NOTICE '%', edge_case_results;
    
    RAISE NOTICE '=====================================';
    RAISE NOTICE 'üèÅ TESTE DE EMPATE E CASOS EXTREMOS FINALIZADO';
    RAISE NOTICE '=====================================';
END $$; 